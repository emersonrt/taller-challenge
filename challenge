import java.util.*;

public class MainTest {

    public static void main(String[] args) {
        int[] coins = {1, 5, 1, 1, 1, 10, 15, 20, 100};
        Arrays.sort(coins);
        int minimumCoinChange = minimumCoinChange(coins);
        System.out.println(minimumCoinChange);

        Integer[] secondSolution = {-10, -5, 0, 5, 10};
        returnSquareValues(secondSolution);
        System.out.println(Arrays.asList(secondSolution));
    }

    private static int minimumCoinChange(int[] coins) {
        int sum = 0;
        int hole = 1;

        for (int index = 0; index < coins.length - 1; index++) {
            int coin = coins[index];
            sum += coin;

            if (sum + hole < coins[index + 1]) {
                return sum + hole;
            }
        }

        return sum + coins[coins.length - 1] + hole;
    }

    private static void returnSquareValues(Integer[] values) {
        boolean hasNegativeValue = false;
        boolean requiresSorting = false;

        for (int i = 0; i < values.length; i++) {
            int value = values[i];
            int squaredValue = value * value;
            values[i] = squaredValue;

            if (!hasNegativeValue && value < 0) {
                hasNegativeValue = true;
                requiresSorting = true;
            }
        }

        if (requiresSorting) {
            Arrays.sort(values);
        }
    }

}
